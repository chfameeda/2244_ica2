pipeline {
    agent any
    environment {
        // Set your Docker Hub username and repository name
        DOCKERHUB_USERNAME = "your-dockerhub-username"   // Replace with your Docker Hub username
        IMAGE_NAME = "static-website"                      // Docker image name
        CONTAINER_NAME = "nostalgic_brahmagupta"          // Container name
        HOST_PORT = "8081"                                // Port for the develop branch container
        TEST_HOST = "3.145.9.207"                         // EC2 instance IP for testing
    }
    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from the develop branch
                checkout scm
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image for the static website
                    sh 'docker build -t ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:latest .'
                }
            }
        }
        stage('Run Container') {
            steps {
                script {
                    // Run the container on port 8081
                    sh 'docker run -d -p ${HOST_PORT}:80 --name ${CONTAINER_NAME} ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:latest'
                }
            }
        }
        stage('Test Website') {
            steps {
                script {
                    // Test if the website is accessible on port 8081
                    sh 'curl -I ${TEST_HOST}:${HOST_PORT}'
                }
            }
        }
        stage('Tag Docker Image') {
            steps {
                script {
                    // Tag the image with both 'latest' and 'develop-${env.BUILD_ID}'
                    sh 'docker tag ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:latest ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:develop-${env.BUILD_ID}'
                }
            }
        }
        stage('Push to Docker Hub') {
            steps {
                script {
                    // Push both tagged images to Docker Hub
                    sh 'docker push ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:latest'
                    sh 'docker push ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:develop-${env.BUILD_ID}'
                }
            }
        }
    }
    post {
        always {
            // Clean up the container after the build
            sh 'docker rm -f ${CONTAINER_NAME}'
        }
    }
}

